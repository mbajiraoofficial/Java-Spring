package com.sample.Controllers;

import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.cloud.client.ServiceInstance;
import org.springframework.cloud.client.loadbalancer.LoadBalanced;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;
import org.springframework.web.client.RestTemplate;

import com.netflix.appinfo.InstanceInfo;
import com.netflix.discovery.DiscoveryClient;
import com.netflix.discovery.EurekaClient;
import com.sample.Models.AddressResponse;
import com.sample.Models.Employee;
import com.sample.Models.EmployeeResponse;
import com.sample.repos.EmployeesRepo;

@RestController
@RequestMapping("/api/employees")
public class EmployeesController {

	@Autowired
	EmployeesRepo repo;
	
	@Autowired
    private EurekaClient eurekaClient;
	
	@Autowired
	@LoadBalanced
	private RestTemplate rest;
	
	@GetMapping("/{id}")
	public ResponseEntity<EmployeeResponse> getEmployee(@PathVariable int id)
	{	
		EmployeeResponse response=new EmployeeResponse();
		
		List<InstanceInfo> instances = eurekaClient.getApplication("ADRESSAPI")
				.getInstances();

        String apiCallUrl=instances.get(0).getHomePageUrl()+"api/address/"+id;
        AddressResponse address=rest.getForObject(apiCallUrl, AddressResponse.class);
        System.out.println(address);
        response.setAddress(address);
        
        
		Employee emp=repo.findById(id).orElse(null);
		if(emp!=null)
		{
		return ResponseEntity.ok(emp);
		}
		else {
			return ResponseEntity.notFound().build();
		}
	}
}
