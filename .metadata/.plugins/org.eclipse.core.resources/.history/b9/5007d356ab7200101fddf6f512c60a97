package com.sample.Controllers;

import java.util.List;
import java.util.stream.Collectors;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.security.authentication.UsernamePasswordAuthenticationToken;
import org.springframework.security.core.authority.SimpleGrantedAuthority;
import org.springframework.security.core.context.SecurityContextHolder;
import org.springframework.security.crypto.password.PasswordEncoder;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;

import com.sample.Models.User;
import com.sample.Repos.UsersRepo;

@Controller
public class AccountsController {
	
	@Autowired
	UsersRepo repo;
	
	@Autowired
	PasswordEncoder encoder;

	@GetMapping("/login")
	public String login()
	{
		return "login";
	}
	
	@PostMapping("/login")
	public String ValidateLogin(String username, String password) {
	    User user = repo.findByUsername(username).orElse(null);
	    if (user != null && encoder.matches(password, user.getPassword())) {

	        List<SimpleGrantedAuthority> authorities = user.getRoles().stream()
	            .map(role -> new SimpleGrantedAuthority("ROLE_" + role.getName()))
	            .collect(Collectors.toList());

	        UsernamePasswordAuthenticationToken auth = 
	            new UsernamePasswordAuthenticationToken(user, null, authorities);

	        SecurityContextHolder.getContext().setAuthentication(auth);

	        return "redirect:/home";
	    }
	    return "login";
	}

	
	@GetMapping("/home")
	public String home()
	{
		return "home";
	}
	
	@GetMapping("/user/profile")
	public String userProfile()
	{
		return "user-profile";
	}
	
	@GetMapping("/admin/dashboard")
	public String adminDashboard()
	{
		return "admin-dashboard";
	}
}
